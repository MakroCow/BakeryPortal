# Generated by Django 2.0.3 on 2018-03-20 00:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingredient_name', models.CharField(max_length=100)),
                ('price_per_unit', models.FloatField()),
                ('unit', models.CharField(blank=True, choices=[('ml', 'Milliliter'), ('l', 'Liter'), ('g', 'Gramm'), ('kg', 'Kilogramm'), ('St端ck', 'St端ck'), ('Tropfen', 'Tropfen'), ('Prise/n', 'Prise/n (3g)')], help_text='Einheit', max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rechnungs_datum', models.DateField()),
                ('rechnungs_summe', models.FloatField()),
                ('bezahl_status', models.CharField(choices=[('offen', 'offen'), ('aufgeschoben', 'aufgeschoben'), ('bezahlt', 'bezahlt'), ('unbekannt', 'bitte Rechnung pr端fen')], default='bitte Rechnung pr端fen', help_text='Status des Bezahlvorgangs', max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bestell_datum', models.DateTimeField(verbose_name='date published')),
                ('kunde', models.ForeignKey(on_delete=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderPosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menge', models.PositiveIntegerField()),
                ('als_teig', models.BooleanField()),
                ('bestellung', models.ForeignKey(on_delete=True, to='portal.Order')),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rezept_bezeichnung', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RecipeList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('ingredient', models.ForeignKey(on_delete=False, to='portal.Ingredient')),
                ('recipe', models.ForeignKey(on_delete=False, to='portal.Recipe')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bakery_name', models.CharField(max_length=200)),
                ('adress_street', models.CharField(max_length=200)),
                ('adress_street_number', models.PositiveIntegerField()),
                ('adress_street_number_extra', models.CharField(blank=True, max_length=2)),
                ('adress_plz', models.CharField(max_length=5)),
                ('adress_city', models.CharField(max_length=200)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='orderposition',
            name='rezept',
            field=models.ForeignKey(on_delete=True, to='portal.Recipe'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='order',
            field=models.OneToOneField(on_delete=False, to='portal.Order'),
        ),
    ]
